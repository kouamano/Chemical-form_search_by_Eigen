(* プログラムのロード *)
prgdir="/Users/kouamano/gitsrc/MATH_SCRIPT/SCRIPTS/"
Get[prgdir<>"List_operations.txt"]
Get[prgdir<>"Matrix_operations.txt"]
Get[prgdir<>"Chemicalform_operations.txt"]

(* 分子間の距離行列/近似行列の作成 *)
(** 分子の結合隣接行列の読み込み **)
SetDirectory["/Users/kouamano/gitsrc/Chemical-form_search_by_Eigen"]
SetDirectory["/home/kamano/TEST_COLLECTION/Chemical-form_search_by_Eigen"]
<<"chemAdjMat.txt";
<<"chemStdNameAll.txt";
<<"nameVSadjmat.txt";
(** Missingの除去 **)
<<"nameVSadjmatSel.txt";
adjmatSel=Map[#[[2]]&,nameVSadjmatSel];

(** パフォーマンステスト **)
AbsoluteTiming[tmp=ParallelTable[ Table[  eigenSpectrumDistance[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,4}]; ]
AbsoluteTiming[tmp=ParallelTable[ Table[  eigenSpectrumDistance[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,8}]; ]
AbsoluteTiming[tmp=Table[ Table[  eigenSpectrumDistance[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,8}]; ]
(** 距離行列:本番:parallel 4days 予定 **)
dTab=ParallelTable[ Table[  eigenSpectrumDistance[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,Length[nameVSadjmatSel]}]; 
(** 距離行列:本番:non-parallel 10days 予定 **)
dTab=Table[ Table[  eigenSpectrumDistance[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,Length[nameVSadjmatSel]}]; 
Save["dTab_a.wl",dTab]
(** 近似行列:本番:parallel 5days 予定 **)
sTab=ParallelTable[ Table[  eigenSpectrumSim[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,Length[nameVSadjmatSel]}];
(** 近似行列:本番:non-parallel 14days:1350hrs 予定 **)
sTab=Table[ Table[  eigenSpectrumSim[nameVSadjmatSel[[i]][[2]],nameVSadjmatSel[[j]][[2]]], {j,Length[nameVSadjmatSel]}] ,{i,Length[nameVSadjmatSel]}];
Save["sTab_a.wl",sTab]

(** ゼロ距離のペアのセレクション結果ファイル **)
(*** ゼロ距離のペアの位置 ***)
"zeroPosNonself.txt"
(*** ゼロ距離のペアの分子名 ***)
"zeroPosNonselfName.tsv"
String[ボンドがない化合物がある->イオン結合は表示されない->水と水溶液が同じ->すべてが共有結合である化合物をChemicalData[]で選択可能か?}
String[ ->もとの分子には薄く結合を入れてみる ]

(* 分子名からadjMatを引く索引 *)
nameToAdjm=Map[#[[1]]->#[[2]]&,nameVSadjmatSel];
adjFromName=Association[nameToAdjm];

(* 登録分子すべてを包含する共通原子集合 *)
(** 共通要素原子 **)
AdjmatSelTr=Map[Tr[#[[2]],List]&,nameVSadjmatSel];
AdjmatSelTrUnion=Apply[seqUnionM,AdjmatSelTr];
(** 共通要素原子を使い、行列へexpand **)
adjmatSelExpand=Map[expandAdjMat[#,AdjmatSelTrUnion]&,adjmatSel];
